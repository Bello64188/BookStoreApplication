// <auto-generated />
using System;
using BookStoreApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStoreApplication.Data.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Bello",
                            LastName = "Abdulazeez"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Kola",
                            LastName = "Dapo"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Sherif",
                            LastName = "Habeeb"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Jamiu",
                            LastName = "Zarumi"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Alaba",
                            LastName = "Abiodun"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Omotosho",
                            LastName = "Bukola"
                        });
                });

            modelBuilder.Entity("BookStoreApplication.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = "financial",
                            Price = 60.990000000000002,
                            Title = "RichDad"
                        },
                        new
                        {
                            Id = 2,
                            GenreId = "financial",
                            Price = 90.989999999999995,
                            Title = "FourQuadrant"
                        },
                        new
                        {
                            Id = 3,
                            GenreId = "education",
                            Price = 67.989999999999995,
                            Title = "7 Best Habit"
                        },
                        new
                        {
                            Id = 4,
                            GenreId = "education",
                            Price = 20.989999999999998,
                            Title = "Data Processing"
                        },
                        new
                        {
                            Id = 5,
                            GenreId = "education",
                            Price = 61.990000000000002,
                            Title = "Physics"
                        },
                        new
                        {
                            Id = 6,
                            GenreId = "history",
                            Price = 100.98999999999999,
                            Title = "1776"
                        },
                        new
                        {
                            Id = 7,
                            GenreId = "scifi",
                            Price = 101.98999999999999,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 8,
                            GenreId = "financial",
                            Price = 77.989999999999995,
                            Title = "Tax"
                        });
                });

            modelBuilder.Entity("BookStoreApplication.Data.BookAuthor", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            BookId = 2
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 2,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 3,
                            BookId = 5
                        });
                });

            modelBuilder.Entity("BookStoreApplication.Data.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "financial",
                            Name = "Financial"
                        },
                        new
                        {
                            Id = "education",
                            Name = "Education"
                        },
                        new
                        {
                            Id = "scifi",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = "history",
                            Name = "History"
                        },
                        new
                        {
                            Id = "novel",
                            Name = "Novel"
                        });
                });

            modelBuilder.Entity("BookStoreApplication.Data.Book", b =>
                {
                    b.HasOne("BookStoreApplication.Data.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookStoreApplication.Data.BookAuthor", b =>
                {
                    b.HasOne("BookStoreApplication.Data.Author", "Authors")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreApplication.Data.Book", "Books")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authors");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookStoreApplication.Data.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("BookStoreApplication.Data.Book", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("BookStoreApplication.Data.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
